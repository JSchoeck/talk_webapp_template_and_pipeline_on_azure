parameters:
  - name: projectId
    type: string
  - name: projectName
    type: string
  - name: location
    type: string
  - name: pathToApp
    type: string
  - name: pythonVersion
    type: string
  - name: existingASPname 
    type: string
  - name: blobStorage
    type: string
  - name: runFromPackage
    type: string
  - name: armConnection
    type: string
  - name: serviceConnectionProd
    type: string

stages:
- stage: DeployBicep
  displayName: 'Deploy Bicep Template'
  dependsOn: Build
  condition: succeeded()
  variables:
    projectId: ${{ parameters.projectId }}
    projectName: ${{ parameters.projectName }}
    location: ${{ parameters.location }}
    pathToApp: ${{ parameters.pathToApp }}
    pythonVersion: ${{ parameters.pythonVersion }}
    existingASPname: ${{ parameters.existingASPname }}
    blobStorage: ${{ parameters.blobStorage }}
    runFromPackage: ${{ parameters.runFromPackage }}
    armConnection: ${{ parameters.armConnection }}
    serviceConnectionProd: ${{ parameters.serviceConnectionProd }}
    templateFile: 'WebApp_Bicep_Deployment/deploy/deploy.bicep'
    parametersFile: 'WebApp_Bicep_Deployment/deploy/deploy.bicepparam'


  jobs:
    - job: DeployBicepJob
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: ${{ variables.serviceConnectionProd }}
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            subscriptionId=$(az account list --query "[?isDefault].id" -o tsv)
            echo "##vso[task.setvariable variable=subscriptionIdProd;isOutput=true]$subscriptionId"
        name: setSubscriptionIdProd
        displayName: 'Setting subscriptionIdProd variable'

      - checkout: Shared_Templates
        path: TEC_007_Shared_Templates
        displayName: 'Checkout Shared_Templates'

      - script: 'ls -R $(Build.SourcesDirectory)'
        displayName: 'List files in Shared_Templates'

      
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            # Construct the override parameters string
            $overrideParams = "-subscriptionIdProd $(setSubscriptionIdProd.subscriptionIdProd) -dsManagedIdentityKeyvaultAccessClientId $(azure_managed_identity_client_id) -projectId $(projectId) -projectName $(projectName)"

            # Conditionally add parameters if they are not empty
            if ($pathToApp -ne "") {
              $overrideParams += " -pathToApp $(pathToApp)"
            }

            if ($pythonVersion -ne "") {
              $overrideParams += " -pythonVersion $(pythonVersion)"
            }

            if ($existingASPname -ne "") {
              $overrideParams += " -existingASPname $(existingASPname)"
            }

            if ($blobStorage -ne "") {
              $overrideParams += " -blobStorage $(blobStorage)"
            }

            if ($runFromPackage -ne "") {
              $overrideParams += " -runFromPackage $(runFromPackage)"
            }

            # Set the override parameters as a pipeline variable
            Write-Host "##vso[task.setvariable variable=overrideParams;isOutput=true]$overrideParams"
        name: CreateOverrideParams
        displayName: 'Create Override Parameters'

      - script: |
          # echo "overrideParams $(CreateOverrideParams.overrideParams)"            
          echo "armConnection $(armConnection)"
          echo "appName $(appName)"
          echo "subscriptionIdProd $(setSubscriptionIdProd.subscriptionIdProd)"
          echo "dsManagedIdentityKeyvaultAccessClientId $(azure_managed_identity_client_id)" 
          echo "projectId $(projectId) ${{ parameters.projectId }}"
          echo "projectName $(projectName) ${{ parameters.projectName }}"
          echo "pathToApp $(pathToApp)"
          echo "pythonVersion $(pythonVersion)"
          echo "existingASPname $(existingASPname)"
          echo "blobStorage $(blobStorage) ${{ parameters.blobStorage }}"
          echo "runFromPackage $(runFromPackage)"
        displayName: 'Display override parameters for debugging'


      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Subscription'
          azureresourceManagerConnection: ${{ variables.armConnection }}
          location: $(location)
          templateLocation: 'Linked artifact'
          csmFile: $(templateFile)
          csmParametersFile: $(parametersFile)
          deploymentMode: 'Incremental'
          overrideParameters: $(CreateOverrideParams.overrideParams)
        displayName: 'Deploy Azure Resources using Bicep Shared Template'


